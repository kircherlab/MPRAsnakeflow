####################################################
### Merge stats generated by rule assignBarcodes ###
### This are assigned+merged BCs                 ###
####################################################


rule statistic_assigned_counts_combine_BC_assignment_stats_helper:
    conda:
        "../../envs/default.yaml"
    input:
        stats=lambda wc: expand(
            "results/experiments/{{project}}/statistic/assigned_counts/{{assignment}}/{{condition}}_{replicate}_{type}_{{config}}.statistic.tsv.gz",
            type=["DNA", "RNA"],
            replicate=getReplicatesOfCondition(wc.project, wc.condition),
        ),
    output:
        temp(
            "results/experiments/{project}/statistic/assigned_counts/{assignment}/helper.{condition}.{config}.statistic.tsv.gz"
        ),
    log:
        temp(
            "results/logs/statistic/assigned_counts/combine_BC_assignment_stats_helper.{project}.{condition}.{config}.{assignment}.log"
        ),
    shell:
        """
        set +o pipefail;
        (
            zcat {input.stats[0]} | head -n 1;
            for i in {input.stats}; do
                zcat $i | tail -n +2
            done;
        ) | gzip -c > {output} 2> {log}
        """


rule statistic_assigned_counts_combine_BC_assignment_stats:
    conda:
        "../../envs/default.yaml"
    input:
        stats=lambda wc: expand(
            "results/experiments/{{project}}/statistic/assigned_counts/{{assignment}}/helper.{condition}.{{config}}.statistic.tsv.gz",
            condition=getConditions(wc.project),
        ),
    output:
        report(
            "results/experiments/{project}/statistic/statistic_assigned_counts_single_{assignment}_{config}.tsv",
            caption="../../report/assigned_counts_beforeMerge.rst",
            category="{project}",
            subcategory="Assignment",
            labels={
                "Analysis": "Statistic",
                "DNA/RNA merge": "No",
                "Configuration": "{config}",
                "Assignment": "{assignment}",
            },
        ),
    log:
        temp(
            "results/logs/statistic/assigned_counts/combine_BC_assignment_stats.{project}.{assignment}_{config}.log"
        ),
    shell:
        """
        set +o pipefail;
        (
            zcat {input.stats[0]} | head -n 1;
            for i in {input.stats}; do
                zcat $i | tail -n +2
            done;
        ) > {output} 2> {log}
        """


###################################################
### Merge stats generated by rule dna_rna_merge ###
### This are assigned+merged counts             ###
###################################################


rule statistic_assigned_counts_combine_stats_dna_rna_merge:
    conda:
        "../../envs/python3.yaml"
    input:
        files=lambda wc: expand(
            "results/experiments/{{project}}/statistic/assigned_counts/{{assignment}}/{{config}}/{{condition}}_{replicate}_merged_assigned_counts.statistic.tsv.gz",
            replicate=getReplicatesOfCondition(wc.project, wc.condition),
        ),
        script=getScript("count/merge_statistic_tables.py"),
    output:
        temp(
            "results/experiments/{project}/statistic/assigned_counts/{assignment}/{config}/combined/{condition}_merged_assigned_counts.statistic.tsv.gz"
        ),
    params:
        cond="{condition}",
        statistic=lambda wc: " ".join(
            getAssignedCountsStatistic(
                wc.project, wc.assignment, wc.config, wc.condition
            )
        ),
    log:
        temp(
            "results/logs/statistic/assigned_counts/combine_stats_dna_rna_merge.{project}.{condition}.{config}.{assignment}.log"
        ),
    shell:
        """
        python {input.script} \
        --condition {params.cond} \
        {params.statistic} \
        --output {output} &> {log}
        """


rule statistic_assigned_counts_combine_stats_dna_rna_merge_all:
    conda:
        "../../envs/default.yaml"
    input:
        files=lambda wc: expand(
            "results/experiments/{{project}}/statistic/assigned_counts/{{assignment}}/{{config}}/combined/{condition}_merged_assigned_counts.statistic.tsv.gz",
            condition=getConditions(wc.project),
        ),
    output:
        report(
            "results/experiments/{project}/statistic/statistic_assigned_counts_merged_{assignment}_{config}.tsv",
            caption="../../report/assigned_counts_afterMerge.rst",
            category="{project}",
            subcategory="Assignment",
            labels={
                "Analysis": "Statistic",
                "DNA/RNA merge": "Yes",
                "Configuration": "{config}",
                "Assignment": "{assignment}",
            },
        ),
    log:
        temp(
            "results/logs/statistic/assigned_counts/combine_stats_dna_rna_merge_all.{project}.{config}.{assignment}.log"
        ),
    shell:
        """
        set +o pipefail;
        (
            zcat {input.files[0]} | head -n 1;
            for i in {input.files}; do
                zcat $i | tail -n +2
            done
        ) > {output} 2> {log}
        """
